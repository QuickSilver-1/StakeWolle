openapi: 3.0.0
info:
  title: Referal API
  version: 1.0.0
  description: API для управления реферальными кодами и пользователями.
servers:
  - url: http://89.46.131.181:8080
    description: Локальный сервер
paths:
  /signup:
    post:
      summary: Регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Аккаунт зарегестрирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 200
                  Info:
                    type: string
                    example: "Аккаунт зарегестрирован"
        '400':
          description: Ошибка
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 400
                  Info:
                    type: string
                    example: "Ошибка данных"
  /signin:
    post:
      summary: Вход пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Вход
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 200
                  Info:
                    type: string
                    example: "Успешный вход"
        '400':
          description: Ошибка
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 400
                  Info:
                    type: string
                    example: "Ошибка данных"
        '401':
          description: Неправильный пароль
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 401
                  Info:
                    type: string
                    example: "Неправильный пароль"
  /generate:
    get:
      summary: Генерация реферального кода
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: day
          in: query
          required: true
          schema:
            type: integer
            description: Количество дней до истечения срока действия кода
      responses:
        '200':
          description: Реферальный код успешно сгенерирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 200
                  Info:
                    type: string
                    example: "c3070bf9bf32e7c95fe6c03c10f0d5a42ccba84fa0c4cb53a4e0e680ac7a315c"
        '400':
          description: Неверный формат данных или необходимо удалить старый код
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 400
                  Info:
                    type: string
                    example: "Ошибка данных"
                  
        '500':
          description: Ошибка записи в базу данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 500
                  Info:
                    type: string
                    example: "Ошибка сервера"
  /delete:
    get:
      summary: Удаление реферального кода
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Реферальный код успешно удален
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 200
                  Info:
                    type: string
                    example: "Код удален"
        '500':
          description: Ошибка удаления ключа или декодирования JWT
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 500
                  Info:
                    type: string
                    example: "Ошибка сервера"
  /code:
    get:
      summary: Получение реферального кода по email
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Код
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 200
                  Info:
                    type: string
                    example: "c3070bf9bf32e7c95fe6c03c10f0d5a42ccba84fa0c4cb53a4e0e680ac7a315c"
        '400':
          description: Пользователь не существует или у пользователя нет реферального кода
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 400
                  Info:
                    type: string
                    example: "Ошибка данных"
  /ref:
    get:
      summary: Получение рефералов по ID пользователя
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Рефералы успешно получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 200
                  Info:
                    type: string
                    example: "12 14 15"
        '400':
          description: Пользователь не существует или у пользователя нет рефералов
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status_code:
                    type: integer
                    example: 400
                  Info:
                    type: string
                    example: "Ошибка данных"
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          example: "user@example.com"
        password:
          type: string
          example: "Password123!"
        ref:
          type: string
          example: "c3070bf9bf32e7c95fe6c03c10f0d5a42ccba84fa0c4cb53a4e0e680ac7a315c"

    Login:
      type: object
      properties:
        email:
          type: string
          example: "user@example.com"
        password:
          type: string
          example: "Password123!"